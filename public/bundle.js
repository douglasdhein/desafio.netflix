/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.js":
/*!********************!*
  !*** ./src/app.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _aut__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aut */ \"./src/aut.js\");\n/* harmony import */ var _sinopse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sinopse */ \"./src/sinopse.js\");\n/* harmony import */ var _mostrarSinopse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mostrarSinopse */ \"./src/mostrarSinopse.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar App = /*#__PURE__*/function () {\n  function App() {\n    _classCallCheck(this, App);\n\n    this.inputUsuario = document.getElementById('usuario'); //Criar input\n\n    this.inputSenha = document.getElementById('senha'); //criar input\n\n    this.botaoEntrar = document.getElementById('botaoEntrar'); //criar botao\n\n    this.logoutButton = document.getElementById('logoutButton');\n    this.autenticacao = new _aut__WEBPACK_IMPORTED_MODULE_0__.Autenticacao();\n    this.registrarLogin();\n    this.registrarLogout(); //this.listarFilmesDestaque(); \n\n    this.registrarClick();\n  }\n  /*\r\n  listarFilmesDestaque() {\r\n      const destaques = sinopses.filter(f => f.categoria === \"Em alta\");\r\n      let htmlDestaque = \"\";\r\n      destaques.forEach((f) => {\r\n          htmlDestaque += card.mostraCapa();\r\n      });\r\n        document.getElementById(\"lugar_certo\").innerHTML = htmlDestaque;\r\n  }\r\n  */\n\n\n  _createClass(App, [{\n    key: \"registrarClick\",\n    value: function registrarClick() {\n      document.querySelectorAll(\".click-filme\").forEach(function (el) {\n        el.onclick = function (event) {\n          //console.log(event.path);\n          var clic = event.path[1];\n          var sinopse = _sinopse__WEBPACK_IMPORTED_MODULE_1__.sinopses.find(function (f) {\n            return f.id == clic.dataset.id;\n          });\n          var card = new _mostrarSinopse__WEBPACK_IMPORTED_MODULE_2__.Card(sinopse);\n          document.getElementById(\"aqui1\").innerHTML = card.mostrarSinopse();\n        };\n      });\n    }\n    /* excluir(event) {\r\n        const filmeResumo = event.path[1];\r\n        const filmeEditado = parseInt(filmeResumo.dataset.id);\r\n            this.sinopse.excluir(filmeEditado);\r\n        } */\n\n  }, {\n    key: \"registrarLogin\",\n    value: function registrarLogin() {\n      var _this = this;\n\n      this.botaoEntrar.onclick = function () {\n        _this.autenticacao.entrar(_this.inputUsuario.value, _this.inputSenha.value);\n      };\n    }\n  }, {\n    key: \"registrarLogout\",\n    value: function registrarLogout() {\n      var _this2 = this;\n\n      this.logoutButton.onclick = function () {\n        _this2.autenticacao.sair();\n      };\n    }\n  }, {\n    key: \"mostrarSinopse\",\n    value: function mostrarSinopse(id) {\n      this.mostrarSinopse(id).onclick = function () {\n        if (document.getElementById(id).style.display === \"none\") {\n          document.getElementById(id).style.display = \"block\";\n        } else {\n          document.getElementById(id).style.display === \"none\";\n        }\n      };\n    }\n  }]);\n\n  return App;\n}();\n\nnew App();\n\n//# sourceURL=webpack://scrapybook.es6/./src/app.js?");

/***/ }),

/***/ "./src/aut.js":
/*!********************!*
  !*** ./src/aut.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Autenticacao\": () => /* binding */ Autenticacao\n/* harmony export */ });\n/* harmony import */ var _users__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./users */ \"./src/users.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar Autenticacao = /*#__PURE__*/function () {\n  function Autenticacao() {\n    _classCallCheck(this, Autenticacao);\n  }\n\n  _createClass(Autenticacao, [{\n    key: \"entrar\",\n    value: function entrar(inputUsuario, inputSenha) {\n      //usar o find\n      if (inputUsuario === _users__WEBPACK_IMPORTED_MODULE_0__.Usuarios.usuario && inputSenha === _users__WEBPACK_IMPORTED_MODULE_0__.Usuarios.senha) {\n        localStorage.setItem(\"Login\", JSON.stringify(inputUsuario));\n        document.getElementById(\"loginPage\").style.display = \"none\";\n        document.getElementById(\"indexPage\").style.display = \"block\";\n      } else {\n        alert('UsuÃ¡rio ou senha incorretos!');\n      }\n    }\n  }, {\n    key: \"sair\",\n    value: function sair() {\n      localStorage.clear();\n      localStorage.setItem('logout-option', JSON.stringify(logoutButton));\n      document.getElementById(\"indexPage\").style.display = \"none\";\n      document.getElementById(\"loginPage\").style.display = \"block\";\n    }\n  }]);\n\n  return Autenticacao;\n}();\n\n//# sourceURL=webpack://scrapybook.es6/./src/aut.js?");

/***/ }),

/***/ "./src/mostrarSinopse.js":
/*!*******************************!*
  !*** ./src/mostrarSinopse.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Card\": () => /* binding */ Card\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Card = /*#__PURE__*/function () {\n  function Card(sinopse) {\n    _classCallCheck(this, Card);\n\n    this.sinopse = sinopse;\n  }\n\n  _createClass(Card, [{\n    key: \"mostrarSinopse\",\n    value: function mostrarSinopse() {\n      return \"<div class = \\\"capaFilme\\\">\\n    <img src=\\\"\".concat(this.sinopse.imagem, \"\\\">\\n</div>\\n<div class = \\\"resumoFilme\\\">\\n    \").concat(this.sinopse.descricao, \"\\n    <br>\\n    <br>\\n    <br>\\n    <a href=\\\"\").concat(this.sinopse.yt, \"\\\"\\n            target=\\\"_blank\\\">Veja o trailer</a>\\n    <br>\\n    <a href=\\\"\").concat(this.sinopse.imdb, \"\\\"\\n            target=\\\"_blank\\\">IMDB</a>\\n    <br>\\n    <br>\\n</div>\\n</div>\");\n    }\n  }]);\n\n  return Card;\n}();\n\n//# sourceURL=webpack://scrapybook.es6/./src/mostrarSinopse.js?");

/***/ }),

/***/ "./src/sinopse.js":
/*!************************!*
  !*** ./src/sinopse.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sinopses\": () => /* binding */ sinopses,\n/* harmony export */   \"Sinopse\": () => /* binding */ Sinopse\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Sinopse = function Sinopse(id, descricao, yt, imdb) {\n  _classCallCheck(this, Sinopse);\n\n  this.id = id;\n  this.descricao = descricao;\n  this.yt = yt;\n  this.imdb = imdb;\n};\n\nvar sinopses = [{\n  \"categoria\": \"Destaque\",\n  \"id\": \"geostormIntro\",\n  \"imagem\": \"./images/geostormCapa.jpg\",\n  \"descricao\": \"Em Tempestade: Planeta em FÃºria, a ocorrÃªncia cada vez mais frequente de eventos climÃ¡ticos capazes de ameaÃ§ar a existÃªncia da humanidade faz com que seja criada uma extensa rede de satÃ©lites ao redor de todo o planeta, de forma a controlar o prÃ³prio clima. Apelidado de 'Dutch Boy', este sistema construÃ­do a partir da cooperaÃ§Ã£o de 17 paÃ­ses Ã© coordenado pelo engenheiro Jake Lawson (Gerard Butler). ApÃ³s anos de dedicaÃ§Ã£o, ele Ã© afastado da funÃ§Ã£o devido a questÃµes polÃ­ticas e, em seu lugar, Ã© nomeado seu irmÃ£o caÃ§ula, Max (Jim Sturgess). TrÃªs anos depois, quando a coordenaÃ§Ã£o do 'Dutch Boy' estÃ¡ prestes a ser transferida dos Estados Unidos para a ONU, falhas pontuais provocam uma forte nevasca em pleno deserto no AfeganistÃ£o e altÃ­ssimas temperaturas em Hong Kong, que matam centenas de pessoas. Jake Ã© entÃ£o convocado para descobrir o que estÃ¡ acontecendo e, enviado para a estaÃ§Ã£o internacional, desvenda uma imensa conspiraÃ§Ã£o ao mesmo tempo em que precisa deixar para trÃ¡s os atritos existentes com Max.\",\n  \"yt\": \"https://www.youtube.com/watch?v=EuOlYPSEzSc&ab_channel=WarnerBros.Pictures\",\n  \"imdb\": \"https://www.imdb.com/title/tt1981128/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Destaque\",\n  \"id\": \"greysAnat\",\n  \"imagem\": \"./images/greysCapa.jpg\",\n  \"descricao\": \"Greyâs Anatomy Ã© um drama mÃ©dico norte-americano exibido no horÃ¡rio nobre da rede ABC. Seu episÃ³dio-piloto foi transmitido pela primeira vez em 27 de marÃ§o de 2005 nos Estados Unidos. O folhetim Ã© protagonizado por Ellen Pompeo, como Dra. Meredith Grey, residente do fictÃ­cio hospital cirÃºrgico Seattle Grace, emSeattle, Washington, o mais rÃ­gido programa cirÃºrgico de Harvard. A sÃ©rie Ã© focada nela e seus colegas, tambÃ©m internos: Cristina, Izzie, George e Alex, mostrando suas vidas amorosas e as dificuldades pelas quais passam no trabalho. O tÃ­tulo do seriado Ã© uma brincadeira com Grayâs Anatomy (Anatomia de Gray), o famoso livro de anatomia de Henry Gray. A sÃ©rie, exibida nos Estados Unidos apÃ³s o hit Desperate Housewives, logo se tornou um sucesso. Tal sucesso se repete no Brasil, onde a sÃ©rie Ã© exibida pelo canal Sony Entertainment Television em horÃ¡rio nobre. Em Portugal, a sÃ©rie foi para o ar pelo canal Fox Life e pela RTP2.\",\n  \"yt\": \"https://www.youtube.com/watch?v=2wqzcLyaU8c&ab_channel=BAIXARDETUDOWEB\",\n  \"imdb\": \"https://www.imdb.com/title/tt0413573/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Destaque\",\n  \"id\": \"gambito\",\n  \"imagem\": \"./images/gambitoCapa.jpg\",\n  \"descricao\": \"O gambito da Rainha conta a histÃ³ria da Beth (Anya TaylorâJoy), uma garota que se torna Ã³rfÃ£ muito cedo, e acaba indo pra um orfanato e passa a maior parte da sua infÃ¢ncia com vÃ¡rias outras Ã³rfÃ£s. Uma dessas Ã³rfÃ£s Ã© a Jolene (Moses Ingram), uma garota negra que tÃ¡ a um bom tempo no orfanato, e jÃ¡ entende todas as coisas que acontecem lÃ¡. As duas se tornam instantaneamente boas amigas. Mas a amizade mais inesperada que a Beth faz no orfanato vem de baixo. Um dia qualquer ela desce atÃ© o porÃ£o do orfanato pra limpar apagadores e lÃ¡ encontra, o zelador Shaibel (Bill Camp) que Ã© um senhor amigÃ¡vel, que tÃ¡ jogando Xadrez sozinho. Como a Beth Ã© observadora, ele ensinar ela a jogar xadrez e os dois se aproximam, jogam juntos todos os dias, e com o passar do tempo a Beth se torna incrÃ­vel no jogo e derrota o Shaibel facilmente. EntÃ£o ele a introduz em times de xadrez e a paixÃ£o dela cresce mais e mais e nisso ela encontra um rumo em sua vida. Que Ã© ser uma campeÃ£ de xadrez!\",\n  \"yt\": \"https://www.youtube.com/watch?v=cnqV3wsZlpo&ab_channel=NetflixBrasil\",\n  \"imdb\": \"https://www.imdb.com/title/tt10048342/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Destaque\",\n  \"id\": \"jurassic\",\n  \"imagem\": \"./images/jurassicCapa.jpg\",\n  \"descricao\": \"O novo filme traz um enredo diferente dos outros filmes da franquia, os quais eram voltados para os parques de entretenimento criados para a exibiÃ§Ã£o dos nÃ£o mais extintos dinossauros (que sempre acaba nÃ£o dando certo). A cronologia de Jurassic World 2 se passa alguns anos depois do fechamento do parque Jurassic World do filme anterior, e logo Ã© colocado em pauta o dilema Ã©tico que a sociedade estÃ¡ enfrentando, jÃ¡ que o vulcÃ£o existente na ilha que os dinossauros habitam nÃ£o estÃ¡ adormecido como era dito, e sim mais acordado que nunca e sua erupÃ§Ã£o significarÃ¡ a morte de todos que estiverem na ilha. O dilema apresentado no filme Ã© se o governo deve agir para salvar os dinossauros ou deixar que eles sejam extintos como um dia jÃ¡ foram. Claire (Bryce Dallas Howard) e Owen (Chris Pratt) estÃ£o de volta para a nova aventura e dispostos a salvar quantos dinossauros puderem com a ajuda do milionÃ¡rio Benjamin Lockwood (James Cromwell).\",\n  \"yt\": \"https://www.youtube.com/watch?v=vn9mMeWcgoM&ab_channel=UniversalPictures\",\n  \"imdb\": \"https://www.imdb.com/title/tt4881806/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Destaque\",\n  \"id\": \"crown\",\n  \"imagem\": \"./images/crownCapa.jpg\",\n  \"descricao\": \"Filha do rei George VI (Jared Harris), Elizabeth II (Claire Foy) sempre soube que nÃ£o teria uma vida comum. ApÃ³s a morte do seu pai em 1952, ela dÃ¡ seus primeiros passos em direÃ§Ã£o ao trono inglÃªs, a comeÃ§ar pelas audiÃªncias semanais com os primeiro-ministros. Ela assume a coroa com apenas 25 anos de idade, mas com grandes compromissos vÃªm grandes responsabilidades.\",\n  \"yt\": \"https://www.youtube.com/watch?v=4eMLckXA-UE&ab_channel=NetflixBrasil\",\n  \"imdb\": \"https://www.imdb.com/title/tt4786824/?ref_=fn_al_tt_1\"\n}, {\n  \"categoria\": \"Destaque\",\n  \"id\": \"hill\",\n  \"imagem\": \"./images/hillCapa.jpg\",\n  \"descricao\": \"Shirley (Elizabeth Reaser/Lulu Wilson), Theo (Kate Siegel/Mckenna Grace), Nell (Victoria Pedretti/Violet McGraw), Luke (Oliver Jackson-Cohen/Julian Hilliard) e Steven (Michiel Huisman/Paxton Singleton) sÃ£o cinco irmÃ£os que cresceram na mansÃ£o Hill, a casa mal-assombrada mais famosa dos Estados Unidos. Agora adultos, eles retornam ao antigo lar e sÃ£o forÃ§ados a confrontar os fantasmas do passado, apÃ³s o suicÃ­dio da irmÃ£ mais nova.\",\n  \"yt\": \"https://www.youtube.com/watch?v=TvELCT5LGQw&ab_channel=MundodosTrailers\",\n  \"imdb\": \"https://www.imdb.com/title/tt6763664/?ref_=nv_sr_srsg_3\"\n}, {\n  \"categoria\": \"Destaque\",\n  \"id\": \"lucifer\",\n  \"imagem\": \"./images/luciferCapa.jpg\",\n  \"descricao\": \"Lucifer Morningstar (Tom Ellis), o famigerado Senhor do Inferno, se cansa da vida demonÃ­aca que leva no subterrÃ¢neo e abandona seu trono para tirar fÃ©rias em Los Angeles. LÃ¡, ele abre uma casa noturna chamada 'Lux' e passa a desfrutar de tudo o que mais gosta: vinho, mulheres e excessos. Sua nova rotina se complica quando uma estrela do pop Ã© brutalmente assassinada diante de seus olhos. Pela primeira vez em mais de 10 milhÃµes de anos, Lucifer sente despertar em seu interior um desejo de justiÃ§a e resolve punir os responsÃ¡veis pelo crime. Ele conhece, entÃ£o, a policial Chloe Decker (Lauren German) e se junta a ela para desvendar o caso. Mas seus poderes de persuasÃ£o se mostram tÃ£o Ãºteis que ele se torna uma espÃ©cie de consultor em outras investigaÃ§Ãµes de homicÃ­dio, formando uma dupla improvÃ¡vel com Chloe.\",\n  \"yt\": \"https://www.youtube.com/watch?v=NcnK3C5W7SI&ab_channel=NetflixBrasil\",\n  \"imdb\": \"https://www.imdb.com/title/tt4052886/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Destaque\",\n  \"id\": \"peaky\",\n  \"imagem\": \"./images/peakyCapa.jpg\",\n  \"descricao\": \"Em Peaky Blinders, Thomas Shelby (Cillian Murphy) e seus irmÃ£os retornam a Birmingham depois de servir no exÃ©rcito britÃ¢nico durante a Primeira Guerra Mundial. Shelby e os Peaky Blinders, a gangue na qual ele Ã© lÃ­der, controlam a cidade de Birmingham. Mas, como as ambiÃ§Ãµes de Shelby se estendem para alÃ©m de Birmingham, ele planeja construir o impÃ©rio de negÃ³cios que criou e impedir qualquer um que atrapalhar.\",\n  \"yt\": \"https://www.youtube.com/watch?v=Ruyl8_PT_y8&ab_channel=Netflix\",\n  \"imdb\": \"https://www.imdb.com/title/tt2442560/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Em alta\",\n  \"id\": \"friends\",\n  \"imagem\": \"./images/friendsCapa.jpg\",\n  \"descricao\": \"Seis jovens sÃ£o unidos por laÃ§os familiares, romÃ¢nticos e, principalmente, de amizade, enquanto tentam vingar em Nova York. Rachel Ã© a garota mimada que deixa o noivo no altar para viver com a amiga dos tempos de escola Monica, sistemÃ¡tica e apaixonada pela culinÃ¡ria. Monica Ã© irmÃ£ de Ross, um paleontÃ³logo que Ã© abandonado pela esposa, que descobriu ser lÃ©sbica. Do outro lado do corredor do apartamento de Monica e Rachel, moram Joey, um ator frustrado, e Chandler, de profissÃ£o misteriosa. A turma Ã© completa pela exÃ³tica Phoebe.\",\n  \"yt\": \"https://www.youtube.com/watch?v=Xs-HbHCcK58&ab_channel=edisonlsm\",\n  \"imdb\": \"https://www.imdb.com/title/tt0108778/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Em alta\",\n  \"id\": \"vida\",\n  \"imagem\": \"./images/avidaemoutrosCapa.jpg\",\n  \"descricao\": \"Aplicando as leis de vida na Terra, para o resto da galÃ¡xia, a sÃ©rie mistura fatos cientÃ­ficos e ficÃ§Ã£o cientÃ­fica para imaginar vidas alienÃ­genas em outros planetas.\",\n  \"yt\": \"https://www.youtube.com/watch?v=JW3BtGVpNEM&ab_channel=Th%C3%A9oMalucoTrailers\",\n  \"imdb\": \"https://www.imdb.com/title/tt13464340/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Em alta\",\n  \"id\": \"aranha\",\n  \"imagem\": \"./images/homemaranhaCapa.jpg\",\n  \"descricao\": \"Em Homem-Aranha: De Volta ao Lar, depois de atuar ao lado dos Vingadores, chegou a hora de Peter Parker (Tom Holland) voltar para casa e para a sua vida, jÃ¡ nÃ£o mais tÃ£o normal. Lutando diariamente contra pequenos crimes nas redondezas, ele pensa ter encontrado a missÃ£o de sua vida quando o terrÃ­vel vilÃ£o Abutre (Michael Keaton) surge amedrontando a cidade. O problema Ã© que a tarefa nÃ£o serÃ¡ tÃ£o fÃ¡cil como ele imaginava.\",\n  \"yt\": \"https://www.youtube.com/watch?v=2x-2iYxgMFU&ab_channel=SonyPicturesBrasil\",\n  \"imdb\": \"https://www.imdb.com/title/tt2250912/?ref_=nv_sr_srsg_6\"\n}, {\n  \"categoria\": \"Em alta\",\n  \"id\": \"batman\",\n  \"imagem\": \"./images/batmanCapa.jpg\",\n  \"descricao\": \" ApÃ³s dois anos desde o surgimento do Batman (Christian Bale), os criminosos de Gotham City tÃªm muito o que temer. Com a ajuda do tenente James Gordon (Gary Oldman) e do promotor pÃºblico Harvey Dent (Aaron Eckhart), Batman luta contra o crime organizado. Acuados com o combate, os chefes do crime aceitam a proposta feita pelo Coringa (Heath Ledger) e o contratam para combater o Homem-Morcego.\",\n  \"yt\": \"https://www.youtube.com/watch?v=a-PVBsmiB0Y&ab_channel=FilmesHQ%27s\",\n  \"imdb\": \"https://www.imdb.com/title/tt0468569/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Em alta\",\n  \"id\": \"planeta\",\n  \"imagem\": \"./images/nossoplanetaCapa.jpg\",\n  \"descricao\": \" Uma viagem por 50 paÃ­ses que mostra a diversidade de habitats aoredor do mundo. SÃ£o imagens inÃ©ditas da vida selvagem, desde o Ãrtico, passando pelas selvas da AmÃ©rica do Sul e pelas profundezas dos oceanos, atÃ© as paisagens africanas. O projeto mostra a importÃ¢ncia de preservar o mundo natural.\",\n  \"yt\": \"https://www.youtube.com/watch?v=IEl1u_hHKac&ab_channel=NetflixBrasil\",\n  \"imdb\": \"https://www.imdb.com/title/tt9253866/?ref_=nv_sr_srsg_3\"\n}, {\n  \"categoria\": \"Seriados\",\n  \"id\": \"breaking\",\n  \"imagem\": \"./images/breakingbadCapa.jpg\",\n  \"descricao\": \"Walter White (Bryan Cranston) Ã© um professor de quÃ­mica na casa dos 50 anos que trabalha em uma escola secundÃ¡ria no Novo MÃ©xico. Para atender Ã s necessidades de Skyler (Anna Gunn), sua esposa grÃ¡vida, e Walt Junior (RJ Mitte), seu filho deficiente fÃ­sico, ele tem que trabalhar duplamente. Sua vida fica ainda mais complicada quando descobre que estÃ¡ sofrendo de um cÃ¢ncer de pulmÃ£o incurÃ¡vel. Para aumentar rapidamente a quantidade de dinheiro que deixaria para sua famÃ­lia apÃ³s sua morte, Walter usa seu conhecimento de quÃ­mica para fazer e vender metanfetamina, uma droga sintÃ©tica. Ele conta com a ajuda do ex-aluno e pequeno traficante Jesse (Aaron Paul) e enfrenta vÃ¡rios desafios, incluindo o fato de seu concunhado ser um importante nome dentro da AgÃªncia Anti-Drogas da regiÃ£o.\",\n  \"yt\": \"https://www.youtube.com/watch?v=2-W6_6gJda0&ab_channel=Mr.Mercury\",\n  \"imdb\": \"https://www.imdb.com/title/tt0903747/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Seriados\",\n  \"id\": \"lacasa\",\n  \"imagem\": \"./images/casadepapelCapa.jpg\",\n  \"descricao\": \"Em La Casa de Papel da Netflix, nove habilidosos ladrÃµes (NairÃ³bi, Berlim, TÃ³kyo, Rio, Helsinki, Oslo, Professor, Denver e Moscou) se trancam na Casa da Moeda da Espanha com o ambicioso plano de realizar o maior roubo da histÃ³ria. Para isso, a gangue precisa lidar com as dezenas de pessoas que manteve como refÃ©m, alÃ©m dos agentes da forÃ§a de elite da polÃ­cia, que farÃ£o de tudo para que a investida dos criminosos fracasse.\",\n  \"yt\": \"https://www.youtube.com/watch?v=yKXYXgo7a3I&ab_channel=AdoroFilmes\",\n  \"imdb\": \"https://www.imdb.com/title/tt6468322/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Seriados\",\n  \"id\": \"dark\",\n  \"imagem\": \"./images/darkCapa.jpg\",\n  \"descricao\": \"Quatro diferentes famÃ­lias - Kahnwald, Nielsen, Doppler e Tiedemann - vivem em Winden, uma pequena e aparentemente tranquila cidade alemÃ£. A rotina dos moradores vira de cabeÃ§a para baixo quando duas crianÃ§as desaparecem misteriosamente, nas proximidades de uma antiga usina nuclear. Segredos familiares comeÃ§am a emergir Ã  medida que a polÃ­cia investiga os sumiÃ§os e logo percebe uma relaÃ§Ã£o com eventos tambÃ©m sombrios do passado. O tempo e o espaÃ§o parecem se embaralhar cada vez mais, deflagrando uma sÃ©rie de tragÃ©dias que, curiosamente, se repete a cada geraÃ§Ã£o.\",\n  \"yt\": \"https://www.youtube.com/watch?v=rrwycJ08PSA&ab_channel=ONEMedia\",\n  \"imdb\": \"https://www.imdb.com/title/tt5753856/?ref_=nv_sr_srsg_3\"\n}, {\n  \"categoria\": \"Seriados\",\n  \"id\": \"walking\",\n  \"imagem\": \"./images/walkingdeadCapa.jpg\",\n  \"descricao\": \"Em The Walking Dead, um apocalipse provoca uma infestaÃ§Ã£o de zumbis na cidade de Cynthiana, em Kentucky, nos Estados Unidos, e o oficial de polÃ­cia Rick Grimes (Andrew Lincoln) descobre que os mortos-vivos estÃ£o se propagando progressivamente. Ele decide unir-se aos homens e mulheres sobreviventes para que tenham mais forÃ§a para combater o fenÃ´meno que os atinge. O grupo percorre diferentes lugares em busca de soluÃ§Ãµes para o problema.\",\n  \"yt\": \"https://www.youtube.com/watch?v=R1v0uFms68U&ab_channel=MahaloVideoGames\",\n  \"imdb\": \"https://www.imdb.com/title/tt1520211/\"\n}, {\n  \"categoria\": \"Seriados\",\n  \"id\": \"rain\",\n  \"imagem\": \"./images/The_Rain.PNG\",\n  \"descricao\": \"Criada por Jannik Tai Mosholt, Christian Potalivo e Esben Toft Jacobsen, The Rain conta a histÃ³ria de um futuro pÃ³s apocalÃ­ptico em que a EscandinÃ¡via foi dominada por uma chuva que carrega um vÃ­rus mortal. Com isso, se instaurou a fome e os sobreviventes sÃ£o forÃ§ados a viverem abrigados, temendo o mau tempo\",\n  \"yt\": \"https://www.youtube.com/watch?v=Se3AfHO7GmY&ab_channel=NetflixBrasil\",\n  \"imdb\": \"https://www.imdb.com/title/tt6656238/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Filmes\",\n  \"id\": \"origem\",\n  \"imagem\": \"./images/aorigemCapa.jpg\",\n  \"descricao\": \"Em um mundo onde Ã© possÃ­vel entrar na mente humana, Cobb (Leonardo DiCaprio) estÃ¡ entre os melhores na arte de roubar segredos valiosos do inconsciente, durante o estado de sono. AlÃ©m disto ele Ã© um fugitivo, pois estÃ¡ impedido de retornar aos Estados Unidos devido Ã  morte de Mal (Marion Cotillard). Desesperado para rever seus filhos, Cobb aceita a ousada missÃ£o proposta por Saito (Ken Watanabe), um empresÃ¡rio japonÃªs: entrar na mente de Richard Fischer (Cillian Murphy), o herdeiro de um impÃ©rio econÃ´mico, e plantar a ideia de desmembrÃ¡-lo. Para realizar este feito ele conta com a ajuda do parceiro Arthur (Joseph Gordon-Levitt), a inexperiente arquiteta de sonhos Ariadne (Ellen Page) e Eames (Tom Hardy), que consegue se disfarÃ§ar de forma precisa no mundo dos sonhos.\",\n  \"yt\": \"https://www.youtube.com/watch?v=R_VX0e0PX90&ab_channel=WarnerBros.PicturesBrasil\",\n  \"imdb\": \"https://www.imdb.com/title/tt1375666/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Filmes\",\n  \"id\": \"diabo\",\n  \"imagem\": \"./images/odiaboCapa.jpg\",\n  \"descricao\": \"Ambientada entre a Segunda Guerra Mundial e a Guerra do VietnÃ£, O Diabo de Cada Dia acompanha diversos personagens num canto esquecido de Ohio, os quais a vida acabam se conectando. Willard Russell (Bill SkarsgÃ¥rd) Ã© um atormentado veterano, sobrevivente de uma carnificina, que nÃ£o consegue salvar sua bela esposa de uma morte agonizante por conta de um cÃ¢ncer, mesmo com toda a oraÃ§Ã£o e devoÃ§Ã£o de sua parte. Enquanto isso, Carl (Jason Clarke) e Sandy Henderson (Riley Keough), um casal de assassinos em sÃ©rie, percorrem as rodovias americanas em busca de modelos adequadas para fotografar e exterminar. E no meio disso tudo estÃ¡ Arvin Russell (Tom Holland), filho Ã³rfÃ£o de Willard e Charlotte (Haley Bennett), que cresceu para ser um homem bom mas comeÃ§a a demonstrar comportamentos violentos quando passa a desconfiar que o lÃ­der religioso da cidade, Preston Teagardin (Robert Pattinson), Ã© uma farsa.\",\n  \"yt\": \"https://www.youtube.com/watch?v=MUS6nMMjLSk&ab_channel=NetflixBrasil\",\n  \"imdb\": \"https://www.imdb.com/title/tt7395114/?ref_=nv_sr_srsg_0\"\n}, {\n  \"categoria\": \"Filmes\",\n  \"id\": \"it\",\n  \"imagem\": \"./images/itCapa.jpg\",\n  \"descricao\": \"Em It - A Coisa, um grupo de sete adolescentes de Derry, uma cidade no Maine, formam o auto-intitulado 'Losers Club' - o clube dos perdedores. A pacata rotina da cidade Ã© abalada quando crianÃ§as comeÃ§am a desaparecer e tudo o que pode ser encontrado delas sÃ£o partes de seus corpos. Logo, os integrantes do 'Losers Club' acabam ficando face a face com o responsÃ¡vel pelos crimes: o palhaÃ§o Pennywise.\",\n  \"yt\": \"https://www.youtube.com/watch?v=dD264ZjfKlk&ab_channel=WarnerBros.PicturesBrasil\",\n  \"imdb\": \"https://www.imdb.com/title/tt1396484/?ref_=nv_sr_srsg_6\"\n}, {\n  \"categoria\": \"Filmes\",\n  \"id\": \"velozes\",\n  \"imagem\": \"./images/velozesCapa.jpg\",\n  \"descricao\": \"Velozes e Furiosos 7 acompanha Dom (Vin Diesel), Brian (Paul Walker), Letty (Michelle Rodriguez) e o resto da equipe apÃ³s os acontecimentos em Londres. Apesar de terem suas chances de voltar para os Estados Unidos e recomeÃ§arem suas vidas, a tranquilidade do grupo Ã© destruÃ­da quando Deckard Shaw (Jason Statham), um assassino profissional, quer vinganÃ§a pela morte de seu irmÃ£o. Agora, a equipe tem que se reunir para impedir este novo vilÃ£o. Mas dessa vez, nÃ£o Ã© sÃ³ sobre ser veloz. A luta Ã© pela sobrevivÃªncia.\",\n  \"yt\": \"https://www.youtube.com/watch?v=hujU0dw6Erk&ab_channel=UniversalPicturesBrasil\",\n  \"imdb\": \"https://www.imdb.com/title/tt2820852/?ref_=nv_sr_srsg_8\"\n}];\n\n\n//# sourceURL=webpack://scrapybook.es6/./src/sinopse.js?");

/***/ }),

/***/ "./src/users.js":
/*!**********************!*
  !*** ./src/users.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Usuarios\": () => /* binding */ Usuarios\n/* harmony export */ });\nvar Usuarios = {\n  usuario: \"admin\",\n  senha: \"admin\"\n};\n\n\n//# sourceURL=webpack://scrapybook.es6/./src/users.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/app.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;